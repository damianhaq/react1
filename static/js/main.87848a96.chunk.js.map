{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","cytaty","setCytaty","wylosowaneCytaty","setWylosowaneCytaty","currentQuote","setCurrentQuote","useEffect","a","fetch","rawResponse","json","content","className","length","quote","author","onClick","prev","min","max","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA6DeA,MA1Df,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAsCA,OApCAC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,sEAC2BC,MACxB,wIACA,IAHH,cACOC,EADP,gBAKuBA,EAAYC,OALnC,OAKOC,EALP,OAMCV,EAAUU,GANX,0CAAD,KAQC,IA4BD,sBAAKC,UAAU,MAAf,UACE,+CACCV,EAAiBW,OAAS,GACzB,oCACE,kCAAKX,EAAiBE,EAAe,GAAGU,MAAxC,OACA,4BAAIZ,EAAiBE,EAAe,GAAGW,YAG3C,sBAAKH,UAAU,UAAf,UACE,wBAAQI,QAhBd,WACMZ,EAAe,GACjBC,GAAgB,SAACY,GAAD,OAAUA,EAAO,MAc/B,uBACA,wBAAQD,QA1Bd,WACMZ,IAAiBF,EAAiBW,QANtCV,GAAoB,SAACc,GACnB,MAAM,GAAN,mBAAWA,GAAX,CAAiBjB,GANJkB,EAMmB,EANdC,EAMiBnB,EAAOa,OAAS,EAL9CO,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,MADvD,IAAiBA,EAAKC,KAalBd,GAAgB,SAACY,GAAD,OAAUA,EAAO,MAEjCZ,GAAgB,SAACY,GAAD,OAAUA,EAAO,MAqB/B,kCC3COM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87848a96.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [cytaty, setCytaty] = useState([]);\n  const [wylosowaneCytaty, setWylosowaneCytaty] = useState([]);\n  const [currentQuote, setCurrentQuote] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const rawResponse = await fetch(\n        \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\",\n        {}\n      );\n      const content = await rawResponse.json();\n      setCytaty(content);\n    })();\n  }, []);\n\n  function random1(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  function setQuote() {\n    setWylosowaneCytaty((prev) => {\n      return [...prev, cytaty[random1(0, cytaty.length - 1)]];\n    });\n  }\n\n  function handleNext() {\n    if (currentQuote === wylosowaneCytaty.length) {\n      setQuote();\n      setCurrentQuote((prev) => prev + 1);\n    } else {\n      setCurrentQuote((prev) => prev + 1);\n    }\n  }\n\n  function handlePrev() {\n    if (currentQuote > 1) {\n      setCurrentQuote((prev) => prev - 1);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Twój cytat</h1>\n      {wylosowaneCytaty.length > 0 && (\n        <article>\n          <p>\"{wylosowaneCytaty[currentQuote - 1].quote}\"</p>\n          <p>{wylosowaneCytaty[currentQuote - 1].author}</p>\n        </article>\n      )}\n      <div className=\"buttons\">\n        <button onClick={handlePrev}>Poprzedni</button>\n        <button onClick={handleNext}>Następny</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}